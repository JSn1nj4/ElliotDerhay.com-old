/* CSS declarations go here */

/* general styles */
html,
body {
  margin: 0;
  padding: 0;
  background: #0B100F;
  color: #eee;
  font-family: monospace;
}

h1, h2, h3, h4, h5, h6, p {
  margin: 0;
  padding: 0.83em 0;
}





/* specific element styles */

header,
#page-container,
footer {
  padding: 0;
}

header,
footer {
  color: #00C49A;
  position: relative;
}

header a {
  text-decoration: none;
}

#brand {
  color: #d4d7d6;
  font-size: 60px;
  line-height: 1em;
  padding: 15px;
  display: inline-block;
}

#brand span {
  color: #00C49A;
  font-size: .7em;
  margin: auto -.3em;
  line-height: 1em;
  vertical-align: middle;
}

#main-menu {
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
}

#main-menu a {
  display: inline-block;
  color: #00C49A;
  text-align: right;
  vertical-align: middle;
  text-transform: uppercase;
  font-size: 30px;
  line-height: 1em;
  padding: 30px;
  -webkit-transition: color 0.3s, background-color 0.3s;
  -moz-transition: color 0.3s, background-color 0.3s;
  -o-transition: color 0.3s, background-color 0.3s;
  transition: color 0.3s, background-color 0.3s;
}

#main-menu a:hover {
  color: #333;
  background-color: #00C49A;
}

#page-container {
  background: #333;
  color: #dddddd;
  overflow: hidden;
}

/* = ROWS AND COLUMNS = */
/*
  @TODO: figure out general row/column paddings and other styles
*/
.e_row { /* by default, all rows will be full-width */
  width: 100%;
  position: relative;
  clear: both;
}

.row-fixed_width { /* @TODO: decide what the largest fixed width of the grid is */

}

.row_inner {

}

.e_col {
  position: relative;
  float: left;
}

.col-inner {

}

/* Styles for Coming Soon template */
#page-coming-soon {
    text-align: center;
    padding: 160px 15px;
}

#page-coming-soon h1 {
    font-size: 80px;
    padding: 0;
    text-transform: uppercase;
}

#page-coming-soon h4 {
    font-size: 24px;
}

/* === RESPONSIVE STYLES === */
/*
  @TODO: Create grid system somewhat similar to what Bootstrap does
    Note: I understand Bootstrap already exists, but I'm trying to create
    something simpler that fits my needs rather than compiling a bloated,
    pre-made stylesheet into my project.

  Grid size notes:
    - 16 columns across
    - 15px side padding (inner)
    - Screen sizes: (ranging from XS to XL)
      > XS:  320px
      > SM:  480px
      > MD:  768px
      > LG:  992px
      > XL: 1200px+
    These sizes should be handled smallest to largest below
*/

@media only screen and (max-width: 319px) { /* everything below XS */

}

@media only screen and (min-width: 320px) { /* beginning of XS screens */
  .col-1-xs, .col-2-xs, .col-3-xs, .col-4-xs, .col-5-xs, .col-6-xs, .col-7-xs, .col-8-xs,
  .col-9-xs, .col-10-xs, .col-11-xs, .col-12-xs, .col-13-xs, .col-14-xs, .col-15-xs, .col-16-xs {

  }
}

@media only screen and (min-width: 480px) { /* beginning of SM screens */

}

@media only screen and (min-width: 768px) { /* beginning of MD screens */

}

@media only screen and (min-width: 992px) { /* beginning of LG screens */

}

@media only screen and (min-width: 1200px) { /* beginning of XL screens */

}
